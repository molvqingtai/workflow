name: CD

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.pnpm-cache.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: Cache pnpm store
        uses: actions/cache@v3
        id: pnpm-cache
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
  linter:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: Restore dependencies
        if: needs.setup.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile
      - run: pnpm run build
      - run: pnpm run lint
      - run: pnpm run check

  tests:
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: Restore dependencies
        if: needs.setup.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile
      - run: pnpm run build
      - run: pnpm run test
  release:
    needs: [setup, linter, tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - uses: pnpm/action-setup@v4
        with:
          version: latest
      - name: Restore dependencies
        if: needs.setup.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile --ignore-scripts
      - run: pnpm run build
      - run: pnpm semantic-release
        working-directory: core
        env:
          GH_TOKEN: ${{ secrets.WORKFLOW_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.WORKFLOW_NPM_TOKEN }}
